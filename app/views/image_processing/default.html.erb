<script type="text/javascript"><!--

// Stored image files (array of ArrayBuffer)
var imgfiles = new Array();

window.onload = function()
{
		// Check for File API support.
		if ( window.File && window.FileReader && window.FileList && window.Blob  ) {
				// All the File APIs are supported.
				window.URL = window.URL || window.webkitURL;
		} else {
				alert('Oh.. Your browser does not fully support File APIs used in this page.');
		}
};

function reloadFiles(evnt, tag_name)
{
                if(tag_name === undefined) tag_name="canvasin";
		var files = evnt.target.files;
		console.log("File Event ");
		console.log(files);

		// Remove all children
		var o;
		o = document.getElementById(tag_name);
		while ( o.hasChildNodes() ) {
				o.removeChild(o.firstChild);
		}
		document.getElementById('progress').innerText = "None.";

		// Reset stored files
		//imgfiles = new Array();

    // Load and display thumbnails.
		var f;
		var i;
    for ( i = 0; f = files[i]; i++ ) {
				// We only support jpeg file
				if ( !f.type.match('image/jpeg') ) {
						continue;
				}
				// File reader
				var reader = new FileReader();
				reader.onload = function(e) {
						// Append to the stored image file list
						console.log("imgfiles : ");
						imgfiles.push(e.target.result);
						console.log(imgfiles);
						// Convert to blob from array buffer
						var blob = new Blob([e.target.result], {type: "image/jpeg"});
						// Create img element and display it
						var img = document.createElement('img');
						img.onload = function(e) {
								// Clean up after the rendering
								window.URL.revokeObjectURL(img.src);
						};
						img.src = window.URL.createObjectURL(blob);
						img.style.width = "100%";
						img.class = "img-rounded";
						img.alt = "non_picture";
						img.max_width = "100%";
						document.getElementById(tag_name).appendChild(img);
						// Enable buttons
//						document.getElementById('btnfr').disabled = false;
//						document.getElementById('btnat').disabled = false;
				}
				// Read the image file as binary array buffer
				reader.readAsArrayBuffer(f);
		}
}

function applyImgProc(scrptpath)
{
		// Remove all children
		var o;
		o = document.getElementById('canvasout');
		while ( o.hasChildNodes() ) {
				o.removeChild(o.firstChild);
		}

                var data = new FormData();
		data.append('file1',document.getElementById('lefile1').files[0]);
		data.append('file2',document.getElementById('lefile2').files[0]);

		var req = new XMLHttpRequest();
		req.open('POST', "faceswap", true); // async
		req.setRequestHeader("Process-Data", false);
    		req.setRequestHeader("X-CSRF-Token", document.getElementById('authenticity_token').value);
		req.responseType = 'arraybuffer';
		req.onload = function(evnt) {
		    // Check the HTTP response status
		    if ( this.status == 200 ) {
		        //var blob = this.response;
		        var blob = new Blob([this.response], {type: "image/jpeg"});
		        var img = document.createElement('img');
		        img.onload = function(e) {
		        // Clean up after the rendering
		        window.URL.revokeObjectURL(img.src);
		    };
		    img.src = window.URL.createObjectURL(blob);
		    img.style.width = "100%";
		    document.getElementById('canvasout').appendChild(img);
		    document.getElementById('progress').innerText = "Done.";
		    }
		};
		req.send(data);

}

function applyFaceRecognition()
{
		document.getElementById('progress').innerText = "Processing face recognition...";
		applyImgProc("./facerecog");
}

function applyAdaptiveThreshold()
{
		document.getElementById('progress').innerText = "Processing adaptive thresholding...";
		applyImgProc("./adaptive");
}


function applyFaceSwap()
{
		document.getElementById('progress').innerText = "Processing face swaping...";
		applyImgProc("./faceswap");
}

//-->
</script>

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" rel="stylesheet">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
<style type="text/css">
  body { padding-top: 70px; }
</style>

</head>

<body>

<div id="drop" style="width:700px; height:300px; padding:10px; border:3px solid" ondragover="onDragOver(event)" ondrop="onDrop(event)" ></div>

<script type="text/javascript">
var disp  = document.getElementById("disp");
function onDrop(event) {
  var text = event.dataTransfer.getData("text/plain");
  drop.innerHTML = text;
  event.preventDefault();
}

<div class="container">
<div style = "border:2px  solid black;">
<canvas id = "canvas" style = "position:relative;width:1000px;height:1000px;top:0px;left:200px; border:2px  solid black;" ondrop="dropIt(event);" ondragover="event.preventDefault();"> </canvas>    
</div>
<div>
    <input type="file" id="fileElem" accept="image/*" style="display:none" >
    <div id="fileSelect" class="drop-area">Select some files</div>
</div>
    <div id="thumbnail"></div>
</div>

<script type="text/javascript">


function dragIt(event) {
event.dataTransfer.setData("URL", event.target.id)
};


function dropIt(event) {
  var theData = event.dataTransfer.getData("URL");
  dt = document.getElementById(theData);
  alert(dt.width);
  alert(dt.height);
  event.preventDefault();
  var c = document.getElementById("canvas");
  var ctx = c.getContext('2d');
  ctx.drawImage(dt, 0, 0);      
};


var count = 0;
var fileSelect = document.getElementById("fileSelect"),
fileElem = document.getElementById("fileElem");


fileElem.addEventListener("change",function(e){
  var files = this.files
  handleFiles(files)
},false)  


fileSelect.addEventListener("click", function (e) {
    fileElem.click();
  e.preventDefault(); 
}, false);


function handleFiles(files) {  
  for (var i = 0; i < files.length; i++) {  
    var file = files[i];    
    var imageType = /image.*/; 

    if(!file.type.match(imageType)){
      console.log("Not an Image");
      continue;
    }

    var image = document.createElement("img");
    var thumbnail = document.getElementById("thumbnail");
    image.file = file;

    function handlefilereader(evt){
    var target = evt.target || evt.srcElement;
    image.src = evt.target.result;     
    }

    if(document.all) {
            image.src = document.getElementById('fileElem').value;
            }
            else {

    var reader = new FileReader()
    reader.onload = handlefilereader;
    reader.readAsDataURL(file);
    }
    image.id = count;
    count++;
    thumbnail.appendChild(image);
    alert(image.width);
    image.draggable = true;
    image.ondragstart = dragIt;
  }
}







function onDragOver(event) {
    event.preventDefault();
}
</script>
  <div class="navbar navbar-default navbar-fixed-top">
    <div class="container">
      <div class="navbar-header">
        <a href="../" class="navbar-brand">Group6 C-1</a>
        <button class="navbar-toggle" type="button" data-toggle="collapse" data-target="#navbar-main">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
      </div>
      <div class="navbar-collapse collapse" id="navbar-main">
        <ul class="nav navbar-nav">
          <li class="dropdown">
            <a class="dropdown-toggle" data-toggle="dropdown" href="#" id="themes">Themes <span class="caret"></span></a>
            <ul class="dropdown-menu" aria-labelledby="themes">
              <li><a href="../default/">Default</a></li>
              <li class="divider"></li>
              <li><a href="../amelia/">Amelia</a></li>
              <li><a href="../united/">United</a></li>
              <li><a href="../yeti/">Yeti</a></li>
            </ul>
          </li>
          <li>
            <a href="../help/">Help</a>
          </li>
          <li>
            <a href="http://www.ci.i.u-tokyo.ac.jp/site/?cloud-pbl">Cloud PBL</a>
          </li>
          <li class="dropdown">
            <a class="dropdown-toggle" data-toggle="dropdown" href="#" id="download">Download <span class="caret"></span></a>
            <ul class="dropdown-menu" aria-labelledby="download">
              <li><a href="./bootstrap.min.css">bootstrap.min.css</a></li>
              <li><a href="./bootstrap.css">bootstrap.css</a></li>
              <li class="divider"></li>
              <li><a href="./variables.less">variables.less</a></li>
              <li><a href="./bootswatch.less">bootswatch.less</a></li>
            </ul>
          </li>
        </ul>
	
        <ul class="nav navbar-nav navbar-right">
          <li><a href="https://edu.jar.jp/redmine/projects/group-6-c1" target="_blank">RedMine</a></li>
        </ul>
	
      </div>
    </div>
  </div>


<table>
  <form name="pictures" action="" enctype="multipart/form-data" method="post" >    
    <div class="container">
      <div id="header">
        <h1>Source Pictures</h1>
      </div>
      <div class="row">
	<div class="col-lg-4">
	  <div class="row">
 	    <input id="lefile1" type="file" name="input_file0" style="display:none"><br>
 	    <div class="input-group">
	      <input id="photoCover1" class="form-control" type="text" placeholder="Source Picture">
 	      <span class="input-group-btn">
 		<button class="btn btn-default" type="button" onclick="$('input[id=lefile1]').click();">Browse</button>
 	      </span>
 	    </div>
	    <script type="text/javascript">
	      $('input[id=lefile1]').change(function(ev) {
	      reloadFiles(ev, "canvas1");
	      $('#photoCover1').val($(this).val());
	      });
	    </script>
	  </div>
	  <div class="row">
	    <div align="center">
	      <output id="canvas1">
		<img src="/assets/images/140_non_picture.svg" alt="non_picture" class="img-rounded" max-width="100%">
	      </output>
	    </div>
	  </div>
	</div>
	
	<div class="col-lg-1">
	  <p></p>
	</div>

	<div class="col-lg-4">
	  <div class="row">
	    <input id="lefile2" type="file" name="input_file1" style="display:none"><br>
	    <div class="input-group">
	      <!--input id="photoCover2" class="form-control uneditable-input" type="text" -->
	      <input id="photoCover2" class="form-control" type="text"  placeholder="Face Picture"></input>
	      <span class="input-group-btn">
		<button class="btn btn-default" type="button" onclick="$('input[id=lefile2]').click();">Browse</button>
	      </span>
	    </div>
	    <script type="text/javascript">
	      $('input[id=lefile2]').change(function(ev) {
	      reloadFiles(ev, "canvas2");
	      $('#photoCover2').val($(this).val());
	      });
	    </script>
	  </div>
	  <div class="row">
	    <div align="center">
	      <output id="canvas2">
		<img src="images/140_non_picture.svg" alt="non_picture" class="img-rounded"  max-width="100%">
	      </output>
	    </div>
	  </div>
	</div>
      </div>
      <div id="footer">
	<div class="row">
	  <p></p>
	</div>
      </div>
    </div>
  </form>
  <div class="container">
    <div align="right">
      <button class="btn btn-primary btn-lg" onclick="applyFaceSwap();">Submit</button>
    </div>
  </div>
</table>	



<div class="container">
  <div id="header">
    <div align="center">
      <div class="row">
	<div class="col-md-6 col-md-offset-2">
	  <h1>Result Pictures</h1>
	  Status: <span id="progress">None</span><br />
	  <output id="canvasout">
		<img src="images/140_non_picture.svg" alt="non_picture" class="img-rounded"  max-width="100%">
	  </output>
	</div>
      </div>
    </div>
  </div>
</div>

<%= hidden_field_tag :authenticity_token, form_authenticity_token %>
