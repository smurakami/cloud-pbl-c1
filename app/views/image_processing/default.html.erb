<script type="text/javascript"><!--

// Stored image files (array of ArrayBuffer)
var imgfiles = new Array();

window.onload = function()
{
		// Check for File API support.
		if ( window.File && window.FileReader && window.FileList && window.Blob  ) {
				// All the File APIs are supported.
				document.getElementById('afile').addEventListener('change', reloadFiles, false);
				window.URL = window.URL || window.webkitURL;
		} else {
				alert('Oh.. Your browser does not fully support File APIs used in this page.');
		}
};

function reloadFiles(evnt, tag_name)
{
		var files = evnt.target.files;

		// Remove all children
		var o;
		o = document.getElementById(tag_name);
		while ( o.hasChildNodes() ) {
				o.removeChild(o.firstChild);
		}
		o = document.getElementById('canvasout');
		while ( o.hasChildNodes() ) {
				o.removeChild(o.firstChild);
		}
		document.getElementById('progress').innerText = "None.";

		// Disable buttons
		document.getElementById('btnfr').disabled = true;
		document.getElementById('btnat').disabled = true;

		// Reset stored files
		imgfiles = new Array();

    // Load and display thumbnails.
		var f;
		var i;
    for ( i = 0; f = files[i]; i++ ) {
				// We only support jpeg file
				if ( !f.type.match('image/jpeg') ) {
						continue;
				}
				// File reader
				var reader = new FileReader();
				reader.onload = function(e) {
						// Append to the stored image file list
						imgfiles.push(e.target.result);
						// Convert to blob from array buffer
						var blob = new Blob([e.target.result], {type: "image/jpeg"});
						// Create img element and display it
						var img = document.createElement('img');
						img.onload = function(e) {
								// Clean up after the rendering
								window.URL.revokeObjectURL(img.src);
						};
						img.src = window.URL.createObjectURL(blob);
						img.style.width = "100%";
						img.class = "img-rounded";
						img.alt = "non_picture";
						img.max_width = "100%";
						document.getElementById(tag_name).appendChild(img);
						// Enable buttons
						document.getElementById('btnfr').disabled = false;
						document.getElementById('btnat').disabled = false;
				}
				// Read the image file as binary array buffer
				reader.readAsArrayBuffer(f);
		}
}

function applyImgProc(scrptpath)
{
		// Remove all children
		var o;
		o = document.getElementById('canvasout');
		while ( o.hasChildNodes() ) {
				o.removeChild(o.firstChild);
		}

		//		for ( var i in imgfiles ) {
                                var data = new FormData();
				data.append('file[]',document.getElementById('lefile1').files[0]);
				data.append('file[]',document.getElementById('lefile2').files[0]);
				// Create an XMLHttpRequest instance to send the data to a remote server
				var req = new XMLHttpRequest();
				req.open('POST', scrptpath, true); // async
				req.setRequestHeader("Content-Type", "image/jpeg");
				req.setRequestHeader("X-CSRF-Token", document.getElementById('authenticity_token').value);
				// Use arraybuffer instead of blob
				// because Safari wrongly handles blob as string
				req.responseType = 'arraybuffer';
				req.onload = function(evnt) {
						// Check the HTTP response status
						if ( this.status == 200 ) {
								//var blob = this.response;
								var blob = new Blob([this.response], {type: "image/jpeg"});
								var img = document.createElement('img');
								img.onload = function(e) {
										// Clean up after the rendering
										window.URL.revokeObjectURL(img.src);
								};
								img.src = window.URL.createObjectURL(blob);
								img.style.width = "100%";
								document.getElementById('canvasout').appendChild(img);
								document.getElementById('progress').innerText = "Done.";
						}
				}
				// Sending array buffer is deprecaded and it is recommended to use
				// ArrayBufferView but Safari has a problem with it.
				req.send(data);
				//req.send(new Uint8Array(arrbufin));
				//		}
}

function applyFaceRecognition()
{
		document.getElementById('progress').innerText = "Processing face recognition...";
		applyImgProc("./facerecog");
}

function applyAdaptiveThreshold()
{
		document.getElementById('progress').innerText = "Processing adaptive thresholding...";
		applyImgProc("./adaptive");
}


function applyFaceSwap()
{
		document.getElementById('progress').innerText = "Processing face swaping...";
		applyImgProc("./faceswap");
}

//-->
</script>

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css" rel="stylesheet">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
<style type="text/css">
  body { padding-top: 70px; }
</style>

</head>

<body>
  <div class="navbar navbar-default navbar-fixed-top">
    <div class="container">
      <div class="navbar-header">
        <a href="../" class="navbar-brand">Group6 C-1</a>
        <button class="navbar-toggle" type="button" data-toggle="collapse" data-target="#navbar-main">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
      </div>
      <div class="navbar-collapse collapse" id="navbar-main">
        <ul class="nav navbar-nav">
          <li class="dropdown">
            <a class="dropdown-toggle" data-toggle="dropdown" href="#" id="themes">Themes <span class="caret"></span></a>
            <ul class="dropdown-menu" aria-labelledby="themes">
              <li><a href="../default/">Default</a></li>
              <li class="divider"></li>
              <li><a href="../amelia/">Amelia</a></li>
              <li><a href="../united/">United</a></li>
              <li><a href="../yeti/">Yeti</a></li>
            </ul>
          </li>
          <li>
            <a href="../help/">Help</a>
          </li>
          <li>
            <a href="http://www.ci.i.u-tokyo.ac.jp/site/?cloud-pbl">Cloud PBL</a>
          </li>
          <li class="dropdown">
            <a class="dropdown-toggle" data-toggle="dropdown" href="#" id="download">Download <span class="caret"></span></a>
            <ul class="dropdown-menu" aria-labelledby="download">
              <li><a href="./bootstrap.min.css">bootstrap.min.css</a></li>
              <li><a href="./bootstrap.css">bootstrap.css</a></li>
              <li class="divider"></li>
              <li><a href="./variables.less">variables.less</a></li>
              <li><a href="./bootswatch.less">bootswatch.less</a></li>
            </ul>
          </li>
        </ul>
	
        <ul class="nav navbar-nav navbar-right">
          <li><a href="https://edu.jar.jp/redmine/projects/group-6-c1" target="_blank">RedMine</a></li>
        </ul>
	
      </div>
    </div>
  </div>


<table>

  <form action="http://hakuhin.jp/test.cgi" enctype="multipart/form-data" method="post" >
    
    <div class="container">
      <div id="header">
        <h1>Source Pictures</h1>
      </div>
      <div class="row">
	<div class="col-lg-4">
	  <div class="row">
 	    <input id="lefile1" type="file" name="input_file0" style="display:none"><br>
 	    <div class="input-group">
	      <input id="photoCover1" class="form-control" type="text" placeholder="Source Picture">
 	      <span class="input-group-btn">
 		<button class="btn btn-default" type="button" onclick="$('input[id=lefile1]').click();">Browse</button>
 	      </span>
 	    </div>
	    <script type="text/javascript">
	      $('input[id=lefile1]').change(function(ev) {
	      reloadFiles(ev, "canvas1");
	      $('#photoCover1').val($(this).val());
	      });
	    </script>
	  </div>
	  <div class="row">
	    <div align="center">
	      <output id="canvas1">
		<img src="/assets/images/140_non_picture.svg" alt="non_picture" class="img-rounded" max-width="100%">
	      </output>
	    </div>
	  </div>
	</div>
	
	<div class="col-lg-1">
	  <p></p>
	</div>

	<div class="col-lg-4">
	  <div class="row">
	    <input id="lefile2" type="file" name="input_file1" style="display:none"><br>
	    <div class="input-group">
	      <!--input id="photoCover2" class="form-control uneditable-input" type="text" -->
	      <input id="photoCover2" class="form-control" type="text"  placeholder="Face Picture"></input>
	      <span class="input-group-btn">
		<button class="btn btn-default" type="button" onclick="$('input[id=lefile2]').click();">Browse</button>
	      </span>
	    </div>
	    <script type="text/javascript">
	      $('input[id=lefile2]').change(function(ev) {
	      reloadFiles(ev, "canvas2");
	      $('#photoCover2').val($(this).val());
	      });
	    </script>
	  </div>
	  <div class="row">
	    <div align="center">
	      <output id="canvas2">
		<img src="images/140_non_picture.svg" alt="non_picture" class="img-rounded"  max-width="100%">
	      </output>
	    </div>
	  </div>
	</div>
      </div>
      <div id="footer">
	<div class="row">
	  <p></p>
	</div>
	<div align="right">
	  <button class="btn btn-primary" onclick="OnClickFunc();">Submit</button>
	</div>
      </div>
    </div>
  </form>
</table>	



<div class="container">
  <div id="header">
    <h1>Result Pictures</h1>
    Status: <span id="progress">None</span><br />
    <output id="canvasout"></output>
  </div>
</div>

<h1>Image processing software sample</h1>
<%= hidden_field_tag :authenticity_token, form_authenticity_token %>
Load JPEG file: <input type="file" id="afile" name="afile" /><br />
Apply <input type="button" id="btnfr" value="face recognition"
  disabled="disabled" onclick="applyFaceRecognition();" /><br />
Apply <input type="button" id="btnat" value="adaptive thresholding algorithm"
  disabled="disabled" onclick="applyAdaptiveThreshold();" /><br />

<h2>Input image</h2>
<output id="canvasin"></output>

<!-- <h2>Output image</h2> -->
<!-- Status: <span id="progress">None</span><br /> -->
<!-- <output id="canvasout"></output> -->

<hr>
<small>Use the information provided on this site on your own responsibility.</small>
<address style="font-size:90%;">(C) 2013-2014 Hirochika Asai, The University of Tokyo.  All rights reserved.</address>

